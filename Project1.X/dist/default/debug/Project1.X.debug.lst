

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Fri Apr 28 13:37:41 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    15                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    16  0000                     
    17                           ; Version 1.41
    18                           ; Generated 25/01/2017 GMT
    19                           ; 
    20                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC18F4550 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     _PORTE	set	3972
    52  0000                     _TRISE	set	3990
    53  0000                     _TRISD	set	3989
    54  0000                     _PORTD	set	3971
    55  0000                     _PORTEbits	set	3972
    56                           
    57                           	psect	smallconst
    58  000800                     __psmallconst:
    59                           	opt stack 0
    60  000800  00                 	db	0
    61  000801                     STR_1:
    62  000801  52                 	db	82	;'R'
    63  000802  00                 	db	0
    64                           
    65                           ; #config settings
    66  000803  00                 	db	0	; dummy byte at the end
    67  0000                     
    68                           	psect	cinit
    69  000924                     __pcinit:
    70                           	opt stack 0
    71  000924                     start_initialization:
    72                           	opt stack 0
    73  000924                     __initialization:
    74                           	opt stack 0
    75                           
    76                           ; Clear objects allocated to COMRAM (2 bytes)
    77  000924  6A0B               	clrf	(__pbssCOMRAM+1)& (0+255),c
    78  000926  6A0A               	clrf	__pbssCOMRAM& (0+255),c
    79  000928                     end_of_initialization:
    80                           	opt stack 0
    81  000928                     __end_of__initialization:
    82                           	opt stack 0
    83  000928  0E00               	movlw	low (__Lsmallconst shr (0+16))
    84  00092A  6EF8               	movwf	tblptru,c
    85  00092C  0E08               	movlw	high __Lsmallconst
    86  00092E  6EF7               	movwf	tblptrh,c
    87  000930  0100               	movlb	0
    88  000932  EF83  F004         	goto	_main	;jump to C main() function
    89                           tblptru	equ	0xFF8
    90                           tblptrh	equ	0xFF7
    91                           
    92                           	psect	bssCOMRAM
    93  00000A                     __pbssCOMRAM:
    94                           	opt stack 0
    95  00000A                     _i:
    96                           	opt stack 0
    97  00000A                     	ds	2
    98                           tblptru	equ	0xFF8
    99                           tblptrh	equ	0xFF7
   100                           
   101                           	psect	cstackCOMRAM
   102  000001                     __pcstackCOMRAM:
   103                           	opt stack 0
   104  000001                     ??_enable:
   105  000001                     
   106                           ; 1 bytes @ 0x0
   107  000001                     	ds	1
   108  000002                     ??_initLCD:
   109  000002                     ??_writeChar:
   110                           
   111                           ; 1 bytes @ 0x1
   112  000002                     	ds	1
   113  000003                     writeChar@a:
   114                           	opt stack 0
   115                           
   116                           ; 1 bytes @ 0x2
   117  000003                     	ds	1
   118  000004                     writeLCD@a:
   119                           	opt stack 0
   120                           
   121                           ; 2 bytes @ 0x3
   122  000004                     	ds	2
   123  000006                     ??_writeLCD:
   124                           
   125                           ; 1 bytes @ 0x5
   126  000006                     	ds	2
   127  000008                     writeLCD@i:
   128                           	opt stack 0
   129                           
   130                           ; 2 bytes @ 0x7
   131  000008                     	ds	2
   132  00000A                     tblptru	equ	0xFF8
   133                           tblptrh	equ	0xFF7
   134                           
   135                           ; 1 bytes @ 0x9
   136 ;;
   137 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   138 ;;
   139 ;; *************** function _main *****************
   140 ;; Defined at:
   141 ;;		line 169 in file "main.c"
   142 ;; Parameters:    Size  Location     Type
   143 ;;		None
   144 ;; Auto vars:     Size  Location     Type
   145 ;;		None
   146 ;; Return value:  Size  Location     Type
   147 ;;                  1    wreg      void 
   148 ;; Registers used:
   149 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   150 ;; Tracked objects:
   151 ;;		On entry : 0/0
   152 ;;		On exit  : 0/0
   153 ;;		Unchanged: 0/0
   154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   155 ;;      Params:         0       0       0       0       0       0       0       0       0
   156 ;;      Locals:         0       0       0       0       0       0       0       0       0
   157 ;;      Temps:          0       0       0       0       0       0       0       0       0
   158 ;;      Totals:         0       0       0       0       0       0       0       0       0
   159 ;;Total ram usage:        0 bytes
   160 ;; Hardware stack levels required when called:    3
   161 ;; This function calls:
   162 ;;		_initLCD
   163 ;;		_writeLCD
   164 ;; This function is called by:
   165 ;;		Startup code after reset
   166 ;; This function uses a non-reentrant model
   167 ;;
   168                           
   169                           	psect	text0
   170  000906                     __ptext0:
   171                           	opt stack 0
   172  000906                     _main:
   173                           	opt stack 28
   174                           
   175                           ;main.c: 170: TRISD = 0x00;
   176                           
   177                           ;incstack = 0
   178  000906  0E00               	movlw	0
   179  000908  6E95               	movwf	3989,c	;volatile
   180                           
   181                           ;main.c: 171: TRISE = 0x00;
   182  00090A  0E00               	movlw	0
   183  00090C  6E96               	movwf	3990,c	;volatile
   184                           
   185                           ;main.c: 172: PORTE = 0x0;
   186  00090E  0E00               	movlw	0
   187  000910  6E84               	movwf	3972,c	;volatile
   188                           
   189                           ;main.c: 173: initLCD();
   190  000912  EC02  F004         	call	_initLCD	;wreg free
   191                           
   192                           ;main.c: 175: writeLCD("R");
   193  000916  0E01               	movlw	low STR_1
   194  000918  6E04               	movwf	writeLCD@a,c
   195  00091A  0E08               	movlw	high STR_1
   196  00091C  6E05               	movwf	writeLCD@a+1,c
   197  00091E  EC33  F004         	call	_writeLCD	;wreg free
   198  000922                     l36:
   199  000922  D7FF               	goto	l36
   200  000924                     __end_of_main:
   201                           	opt stack 0
   202                           tblptru	equ	0xFF8
   203                           tblptrh	equ	0xFF7
   204                           
   205 ;; *************** function _writeLCD *****************
   206 ;; Defined at:
   207 ;;		line 163 in file "main.c"
   208 ;; Parameters:    Size  Location     Type
   209 ;;  a               2    3[COMRAM] PTR unsigned char 
   210 ;;		 -> STR_1(2), 
   211 ;; Auto vars:     Size  Location     Type
   212 ;;  i               2    7[COMRAM] int 
   213 ;; Return value:  Size  Location     Type
   214 ;;                  1    wreg      void 
   215 ;; Registers used:
   216 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   217 ;; Tracked objects:
   218 ;;		On entry : 0/0
   219 ;;		On exit  : 0/0
   220 ;;		Unchanged: 0/0
   221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   222 ;;      Params:         2       0       0       0       0       0       0       0       0
   223 ;;      Locals:         2       0       0       0       0       0       0       0       0
   224 ;;      Temps:          2       0       0       0       0       0       0       0       0
   225 ;;      Totals:         6       0       0       0       0       0       0       0       0
   226 ;;Total ram usage:        6 bytes
   227 ;; Hardware stack levels used:    1
   228 ;; Hardware stack levels required when called:    2
   229 ;; This function calls:
   230 ;;		_writeChar
   231 ;; This function is called by:
   232 ;;		_main
   233 ;; This function uses a non-reentrant model
   234 ;;
   235                           
   236                           	psect	text1
   237  000866                     __ptext1:
   238                           	opt stack 0
   239  000866                     _writeLCD:
   240                           	opt stack 28
   241                           
   242                           ;main.c: 164: int i = 0;
   243                           
   244                           ;incstack = 0
   245  000866  0E00               	movlw	0
   246  000868  6E09               	movwf	writeLCD@i+1,c
   247  00086A  0E00               	movlw	0
   248  00086C  6E08               	movwf	writeLCD@i,c
   249                           
   250                           ;main.c: 165: for(;a[i] != '\0';i++)
   251  00086E  D010               	goto	l715
   252  000870                     l711:
   253                           
   254                           ;main.c: 166: writeChar(a[i]);
   255  000870  5008               	movf	writeLCD@i,w,c
   256  000872  2404               	addwf	writeLCD@a,w,c
   257  000874  6E06               	movwf	??_writeLCD& (0+255),c
   258  000876  5009               	movf	writeLCD@i+1,w,c
   259  000878  2005               	addwfc	writeLCD@a+1,w,c
   260  00087A  6E07               	movwf	(??_writeLCD+1)& (0+255),c
   261  00087C  C006  FFF6         	movff	??_writeLCD,tblptrl
   262  000880  C007  FFF7         	movff	??_writeLCD+1,tblptrh
   263  000884                     	if	0	;tblptru may be non-zero
   264  000884                     	endif
   265  000884                     	if	0	;tblptru may be non-zero
   266  000884                     	endif
   267  000884  0008               	tblrd		*
   268  000886  50F5               	movf	tablat,w,c
   269  000888  EC73  F004         	call	_writeChar
   270  00088C  4A08               	infsnz	writeLCD@i,f,c
   271  00088E  2A09               	incf	writeLCD@i+1,f,c
   272  000890                     l715:
   273  000890  5008               	movf	writeLCD@i,w,c
   274  000892  2404               	addwf	writeLCD@a,w,c
   275  000894  6E06               	movwf	??_writeLCD& (0+255),c
   276  000896  5009               	movf	writeLCD@i+1,w,c
   277  000898  2005               	addwfc	writeLCD@a+1,w,c
   278  00089A  6E07               	movwf	(??_writeLCD+1)& (0+255),c
   279  00089C  C006  FFF6         	movff	??_writeLCD,tblptrl
   280  0008A0  C007  FFF7         	movff	??_writeLCD+1,tblptrh
   281  0008A4                     	if	0	;tblptru may be non-zero
   282  0008A4                     	endif
   283  0008A4                     	if	0	;tblptru may be non-zero
   284  0008A4                     	endif
   285  0008A4  0008               	tblrd		*
   286  0008A6  50F5               	movf	tablat,w,c
   287  0008A8  0900               	iorlw	0
   288  0008AA  B4D8               	btfsc	status,2,c
   289  0008AC  0012               	return	
   290  0008AE  D7E0               	goto	l711
   291  0008B0                     __end_of_writeLCD:
   292                           	opt stack 0
   293                           tblptru	equ	0xFF8
   294                           tblptrh	equ	0xFF7
   295                           tblptrl	equ	0xFF6
   296                           tablat	equ	0xFF5
   297                           status	equ	0xFD8
   298                           
   299 ;; *************** function _writeChar *****************
   300 ;; Defined at:
   301 ;;		line 155 in file "main.c"
   302 ;; Parameters:    Size  Location     Type
   303 ;;  a               1    wreg     unsigned char 
   304 ;; Auto vars:     Size  Location     Type
   305 ;;  a               1    2[COMRAM] unsigned char 
   306 ;; Return value:  Size  Location     Type
   307 ;;                  1    wreg      void 
   308 ;; Registers used:
   309 ;;		wreg, cstack
   310 ;; Tracked objects:
   311 ;;		On entry : 0/0
   312 ;;		On exit  : 0/0
   313 ;;		Unchanged: 0/0
   314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   315 ;;      Params:         0       0       0       0       0       0       0       0       0
   316 ;;      Locals:         1       0       0       0       0       0       0       0       0
   317 ;;      Temps:          1       0       0       0       0       0       0       0       0
   318 ;;      Totals:         2       0       0       0       0       0       0       0       0
   319 ;;Total ram usage:        2 bytes
   320 ;; Hardware stack levels used:    1
   321 ;; Hardware stack levels required when called:    1
   322 ;; This function calls:
   323 ;;		_enable
   324 ;; This function is called by:
   325 ;;		_writeLCD
   326 ;; This function uses a non-reentrant model
   327 ;;
   328                           
   329                           	psect	text2
   330  0008E6                     __ptext2:
   331                           	opt stack 0
   332  0008E6                     _writeChar:
   333                           	opt stack 28
   334                           
   335                           ;incstack = 0
   336                           ;writeChar@a stored from wreg
   337  0008E6  6E03               	movwf	writeChar@a,c
   338                           
   339                           ;main.c: 156: PORTEbits.RE2 = 1;
   340  0008E8  8484               	bsf	3972,2,c	;volatile
   341                           
   342                           ;main.c: 157: PORTD = a;
   343  0008EA  C003  FF83         	movff	writeChar@a,3971	;volatile
   344                           
   345                           ;main.c: 158: enable();
   346  0008EE  EC58  F004         	call	_enable	;wreg free
   347                           
   348                           ;main.c: 159: _delay((unsigned long)((10)*(8000000/4000.0)));
   349  0008F2  0E1A               	movlw	26
   350  0008F4  6E02               	movwf	??_writeChar& (0+255),c
   351  0008F6  0EF8               	movlw	248
   352  0008F8                     u57:
   353  0008F8  2EE8               	decfsz	wreg,f,c
   354  0008FA  D7FE               	bra	u57
   355  0008FC  2E02               	decfsz	??_writeChar& (0+255),f,c
   356  0008FE  D7FC               	bra	u57
   357  000900  D000               	nop2	
   358                           
   359                           ;main.c: 160: PORTEbits.RE2 = 0;
   360  000902  9484               	bcf	3972,2,c	;volatile
   361  000904  0012               	return		;funcret
   362  000906                     __end_of_writeChar:
   363                           	opt stack 0
   364                           tblptru	equ	0xFF8
   365                           tblptrh	equ	0xFF7
   366                           tblptrl	equ	0xFF6
   367                           tablat	equ	0xFF5
   368                           wreg	equ	0xFE8
   369                           status	equ	0xFD8
   370                           
   371 ;; *************** function _initLCD *****************
   372 ;; Defined at:
   373 ;;		line 140 in file "main.c"
   374 ;; Parameters:    Size  Location     Type
   375 ;;		None
   376 ;; Auto vars:     Size  Location     Type
   377 ;;		None
   378 ;; Return value:  Size  Location     Type
   379 ;;                  1    wreg      void 
   380 ;; Registers used:
   381 ;;		wreg, status,2, cstack
   382 ;; Tracked objects:
   383 ;;		On entry : 0/0
   384 ;;		On exit  : 0/0
   385 ;;		Unchanged: 0/0
   386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   387 ;;      Params:         0       0       0       0       0       0       0       0       0
   388 ;;      Locals:         0       0       0       0       0       0       0       0       0
   389 ;;      Temps:          1       0       0       0       0       0       0       0       0
   390 ;;      Totals:         1       0       0       0       0       0       0       0       0
   391 ;;Total ram usage:        1 bytes
   392 ;; Hardware stack levels used:    1
   393 ;; Hardware stack levels required when called:    1
   394 ;; This function calls:
   395 ;;		_enable
   396 ;; This function is called by:
   397 ;;		_main
   398 ;; This function uses a non-reentrant model
   399 ;;
   400                           
   401                           	psect	text3
   402  000804                     __ptext3:
   403                           	opt stack 0
   404  000804                     _initLCD:
   405                           	opt stack 29
   406                           
   407                           ;main.c: 141: PORTD=0x80;
   408                           
   409                           ;incstack = 0
   410  000804  0E80               	movlw	128
   411  000806  6E83               	movwf	3971,c	;volatile
   412                           
   413                           ;main.c: 142: enable();
   414  000808  EC58  F004         	call	_enable	;wreg free
   415                           
   416                           ;main.c: 143: _delay((unsigned long)((10)*(8000000/4000.0)));
   417  00080C  0E1A               	movlw	26
   418  00080E  6E02               	movwf	??_initLCD& (0+255),c
   419  000810  0EF8               	movlw	248
   420  000812                     u67:
   421  000812  2EE8               	decfsz	wreg,f,c
   422  000814  D7FE               	bra	u67
   423  000816  2E02               	decfsz	??_initLCD& (0+255),f,c
   424  000818  D7FC               	bra	u67
   425  00081A  D000               	nop2	
   426                           
   427                           ;main.c: 144: PORTD=0x30;
   428  00081C  0E30               	movlw	48
   429  00081E  6E83               	movwf	3971,c	;volatile
   430                           
   431                           ;main.c: 145: enable();
   432  000820  EC58  F004         	call	_enable	;wreg free
   433                           
   434                           ;main.c: 146: _delay((unsigned long)((10)*(8000000/4000.0)));
   435  000824  0E1A               	movlw	26
   436  000826  6E02               	movwf	??_initLCD& (0+255),c
   437  000828  0EF8               	movlw	248
   438  00082A                     u77:
   439  00082A  2EE8               	decfsz	wreg,f,c
   440  00082C  D7FE               	bra	u77
   441  00082E  2E02               	decfsz	??_initLCD& (0+255),f,c
   442  000830  D7FC               	bra	u77
   443  000832  D000               	nop2	
   444                           
   445                           ;main.c: 147: PORTD=0x38;
   446  000834  0E38               	movlw	56
   447  000836  6E83               	movwf	3971,c	;volatile
   448                           
   449                           ;main.c: 148: enable();
   450  000838  EC58  F004         	call	_enable	;wreg free
   451                           
   452                           ;main.c: 149: _delay((unsigned long)((10)*(8000000/4000.0)));
   453  00083C  0E1A               	movlw	26
   454  00083E  6E02               	movwf	??_initLCD& (0+255),c
   455  000840  0EF8               	movlw	248
   456  000842                     u87:
   457  000842  2EE8               	decfsz	wreg,f,c
   458  000844  D7FE               	bra	u87
   459  000846  2E02               	decfsz	??_initLCD& (0+255),f,c
   460  000848  D7FC               	bra	u87
   461  00084A  D000               	nop2	
   462                           
   463                           ;main.c: 150: PORTD=0xf;
   464  00084C  0E0F               	movlw	15
   465  00084E  6E83               	movwf	3971,c	;volatile
   466                           
   467                           ;main.c: 151: enable();
   468  000850  EC58  F004         	call	_enable	;wreg free
   469                           
   470                           ;main.c: 152: _delay((unsigned long)((10)*(8000000/4000.0)));
   471  000854  0E1A               	movlw	26
   472  000856  6E02               	movwf	??_initLCD& (0+255),c
   473  000858  0EF8               	movlw	248
   474  00085A                     u97:
   475  00085A  2EE8               	decfsz	wreg,f,c
   476  00085C  D7FE               	bra	u97
   477  00085E  2E02               	decfsz	??_initLCD& (0+255),f,c
   478  000860  D7FC               	bra	u97
   479  000862  D000               	nop2	
   480  000864  0012               	return		;funcret
   481  000866                     __end_of_initLCD:
   482                           	opt stack 0
   483                           tblptru	equ	0xFF8
   484                           tblptrh	equ	0xFF7
   485                           tblptrl	equ	0xFF6
   486                           tablat	equ	0xFF5
   487                           wreg	equ	0xFE8
   488                           status	equ	0xFD8
   489                           
   490 ;; *************** function _enable *****************
   491 ;; Defined at:
   492 ;;		line 127 in file "main.c"
   493 ;; Parameters:    Size  Location     Type
   494 ;;		None
   495 ;; Auto vars:     Size  Location     Type
   496 ;;		None
   497 ;; Return value:  Size  Location     Type
   498 ;;                  1    wreg      void 
   499 ;; Registers used:
   500 ;;		wreg
   501 ;; Tracked objects:
   502 ;;		On entry : 0/0
   503 ;;		On exit  : 0/0
   504 ;;		Unchanged: 0/0
   505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   506 ;;      Params:         0       0       0       0       0       0       0       0       0
   507 ;;      Locals:         0       0       0       0       0       0       0       0       0
   508 ;;      Temps:          1       0       0       0       0       0       0       0       0
   509 ;;      Totals:         1       0       0       0       0       0       0       0       0
   510 ;;Total ram usage:        1 bytes
   511 ;; Hardware stack levels used:    1
   512 ;; This function calls:
   513 ;;		Nothing
   514 ;; This function is called by:
   515 ;;		_initLCD
   516 ;;		_writeChar
   517 ;; This function uses a non-reentrant model
   518 ;;
   519                           
   520                           	psect	text4
   521  0008B0                     __ptext4:
   522                           	opt stack 0
   523  0008B0                     _enable:
   524                           	opt stack 28
   525                           
   526                           ;main.c: 128: if(PORTEbits.RE1==1)
   527                           
   528                           ;incstack = 0
   529  0008B0  A284               	btfss	3972,1,c	;volatile
   530  0008B2  D002               	goto	l17
   531                           
   532                           ;main.c: 129: PORTEbits.RE1=0;
   533  0008B4  9284               	bcf	3972,1,c	;volatile
   534  0008B6  D001               	goto	l657
   535  0008B8                     l17:
   536                           
   537                           ;main.c: 130: else
   538                           ;main.c: 131: PORTEbits.RE1=1;
   539  0008B8  8284               	bsf	3972,1,c	;volatile
   540  0008BA                     l657:
   541                           
   542                           ;main.c: 132: _delay((unsigned long)((10)*(8000000/4000.0)));
   543  0008BA  0E1A               	movlw	26
   544  0008BC  6E01               	movwf	??_enable& (0+255),c
   545  0008BE  0EF8               	movlw	248
   546  0008C0                     u107:
   547  0008C0  2EE8               	decfsz	wreg,f,c
   548  0008C2  D7FE               	bra	u107
   549  0008C4  2E01               	decfsz	??_enable& (0+255),f,c
   550  0008C6  D7FC               	bra	u107
   551  0008C8  D000               	nop2	
   552                           
   553                           ;main.c: 133: if(PORTEbits.RE1==1)
   554  0008CA  A284               	btfss	3972,1,c	;volatile
   555  0008CC  D002               	goto	l19
   556                           
   557                           ;main.c: 134: PORTEbits.RE1=0;
   558  0008CE  9284               	bcf	3972,1,c	;volatile
   559  0008D0  D001               	goto	l663
   560  0008D2                     l19:
   561                           
   562                           ;main.c: 135: else
   563                           ;main.c: 136: PORTEbits.RE1=1;
   564  0008D2  8284               	bsf	3972,1,c	;volatile
   565  0008D4                     l663:
   566                           
   567                           ;main.c: 137: _delay((unsigned long)((10)*(8000000/4000.0)));
   568  0008D4  0E1A               	movlw	26
   569  0008D6  6E01               	movwf	??_enable& (0+255),c
   570  0008D8  0EF8               	movlw	248
   571  0008DA                     u117:
   572  0008DA  2EE8               	decfsz	wreg,f,c
   573  0008DC  D7FE               	bra	u117
   574  0008DE  2E01               	decfsz	??_enable& (0+255),f,c
   575  0008E0  D7FC               	bra	u117
   576  0008E2  D000               	nop2	
   577  0008E4  0012               	return		;funcret
   578  0008E6                     __end_of_enable:
   579                           	opt stack 0
   580                           tblptru	equ	0xFF8
   581                           tblptrh	equ	0xFF7
   582                           tblptrl	equ	0xFF6
   583                           tablat	equ	0xFF5
   584                           wreg	equ	0xFE8
   585                           status	equ	0xFD8
   586                           tblptru	equ	0xFF8
   587                           tblptrh	equ	0xFF7
   588                           tblptrl	equ	0xFF6
   589                           tablat	equ	0xFF5
   590                           wreg	equ	0xFE8
   591                           status	equ	0xFD8
   592                           
   593                           	psect	rparam
   594  0000                     tblptru	equ	0xFF8
   595                           tblptrh	equ	0xFF7
   596                           tblptrl	equ	0xFF6
   597                           tablat	equ	0xFF5
   598                           wreg	equ	0xFE8
   599                           status	equ	0xFD8


Data Sizes:
    Strings     2
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      9      11
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    writeLCD@a	PTR unsigned char  size(2) Largest target is 2
		 -> STR_1(CODE[2]), 


Critical Paths under _main in COMRAM

    _main->_writeLCD
    _writeLCD->_writeChar
    _writeChar->_enable
    _initLCD->_enable

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     169
                            _initLCD
                           _writeLCD
 ---------------------------------------------------------------------------------
 (1) _writeLCD                                             6     4      2     169
                                              3 COMRAM     6     4      2
                          _writeChar
 ---------------------------------------------------------------------------------
 (2) _writeChar                                            2     2      0      15
                                              1 COMRAM     2     2      0
                             _enable
 ---------------------------------------------------------------------------------
 (1) _initLCD                                              1     1      0       0
                                              1 COMRAM     1     1      0
                             _enable
 ---------------------------------------------------------------------------------
 (3) _enable                                               1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initLCD
     _enable
   _writeLCD
     _writeChar
       _enable

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      9       B       1       11.6%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       B      20        0.0%
DATA                 0      0       B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Fri Apr 28 13:37:41 2017

                      _i 000A                       l17 08B8                       l19 08D2  
                     l36 0922                       u57 08F8                       u67 0812  
                     u77 082A                       u87 0842                       u97 085A  
            __CFG_BOR$ON 000000              __CFG_BORV$3 000000             __CFG_CP0$OFF 000000  
           __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000  
            __CFG_LVP$ON 000000                      l711 0870                      l715 0890  
                    l663 08D4                      l657 08BA             __CFG_CPB$OFF 000000  
                    u107 08C0                      u117 08DA             __CFG_CPD$OFF 000000  
                    wreg 000FE8             __CFG_FOSC$HS 000000             __CFG_WDT$OFF 000000  
                   STR_1 0801                     _main 0906                     start 0000  
          __CFG_IESO$OFF 000000            __CFG_MCLRE$ON 000000             ___param_bank 000000  
          __CFG_PLLDIV$1 000000           __CFG_CCP2MX$ON 000000                    ?_main 0001  
                  _PORTD 000F83                    _PORTE 000F84            __CFG_USBDIV$1 000000  
                  _TRISD 000F95                    _TRISE 000F96            __CFG_PWRT$OFF 000000  
          __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000  
          __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000  
         __CFG_EBTR1$OFF 000000           __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000  
          __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000  
        __end_of_initLCD 0866           __CFG_EBTRB$OFF 000000                    tablat 000FF5  
                  status 000FD8           __CFG_ICPRT$OFF 000000           __CFG_PBADEN$ON 000000  
        __initialization 0924             __end_of_main 0924                   ??_main 000A  
          __activetblptr 000001           __CFG_XINST$OFF 000000           __CFG_STVREN$ON 000000  
                 _enable 08B0                ??_initLCD 0002             __mediumconst 0000  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
       __end_of_writeLCD 08B0               __accesstop 0060  __end_of__initialization 0928  
          ___rparam_used 000001           __pcstackCOMRAM 0001                  ?_enable 0001  
        __CFG_VREGEN$OFF 000000       __size_of_writeChar 0020                  __Hparam 0000  
                __Lparam 0000             __psmallconst 0800          __size_of_enable 0036  
                __pcinit 0924                  __ramtop 0800                ?_writeLCD 0004  
                __ptext0 0906                  __ptext1 0866                  __ptext2 08E6  
                __ptext3 0804                  __ptext4 08B0                  _initLCD 0804  
   end_of_initialization 0928               ??_writeLCD 0006                _PORTEbits 000F84  
      __end_of_writeChar 0906           __end_of_enable 08E6      start_initialization 0924  
               ??_enable 0001         __CFG_LPT1OSC$OFF 000000              __pbssCOMRAM 000A  
               ?_initLCD 0001              __smallconst 0800        __size_of_writeLCD 004A  
       __CFG_WDTPS$32768 000000                _writeChar 08E6                 __Hrparam 0000  
               __Lrparam 0000             __Lsmallconst 0800         __size_of_initLCD 0062  
             ?_writeChar 0001            __size_of_main 001E               writeChar@a 0003  
               _writeLCD 0866    __CFG_CPUDIV$OSC1_PLL2 000000                writeLCD@a 0004  
              writeLCD@i 0008              ??_writeChar 0002  
